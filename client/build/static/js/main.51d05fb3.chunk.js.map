{"version":3,"sources":["components/auth/Register.js","components/auth/Login.js","components/auth/Loginscreen.js","components/auth/SubmitEvidence.js","components/auth/userpage.js","components/auth/Success.js","components/Search/searchEvidence.js","components/home/landing.js","components/home/navbar.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","onChangefirstName","bind","onChangelastName","onChangeemail","onChangepassword","onSubmit","state","firstName","lastName","email","password","e","this","setState","target","value","preventDefault","user","axios","post","then","result","history","push","style","marginTop","className","type","placeholder","onChange","Component","Login","loggeduser","res","status","Error","error","localStorage","setItem","data","token","catch","err","alert","Loginscreen","to","SubmitEvidence","onChangetypeOfPaper","onChangeTitle","onChangeAuthor","onChangeSource","onChangeYear","onChangeDOI","onChangeSubmitter","onChangeDate","typeOfPaper","title","author","source","yearOfPublication","doiLink","dateOfSubmission","Date","submitter","date","evidence","console","log","window","location","name","selected","required","Success","Methods","label","Claims","searchEvidence","displayEvidence","length","map","index","key","seMethod","claims","degreeofevidence","handleChangeSearch","handleChangeSearch1","onSubmitSearch","searchseMethod","searchclaims","defaultDisplay","method","url","response","get","options","onClick","Landing","Navbar","App","path","exact","component","Register","userpage","Search","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.51d05fb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Create extends Component {\n\n    constructor(props) {\n        super();\n\n        this.onChangefirstName = this.onChangefirstName.bind(this);\n        this.onChangelastName= this.onChangelastName.bind(this);\n        this.onChangeemail = this.onChangeemail.bind(this);\n        this.onChangepassword = this.onChangepassword.bind(this);\n  //    this.onChangeuserType = this.onChangeuserType.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n         //   userType: ''\n        }\n    }\n\n    onChangefirstName(e) {\n        this.setState({\n          firstName: e.target.value\n        });\n    }\n\n    onChangelastName(e) {\n        this.setState({\n          lastName: e.target.value\n        });\n    }\n\n    onChangeemail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangepassword(e) {\n      this.setState({\n          password: e.target.value\n      });\n  }\n  /* onChangeuserType(e) {\n    this.setState({\n        userType: e.target.value\n    });\n} */\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const user = {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n    //    userType: this.state.userType\n      };\n        axios.post('http://localhost:5000/auth/signup', user)\n        .then((result) => {\n            this.props.history.push(\"/loginscreen\")\n          });\n\n        this.setState({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n       //   userType: false\n        })\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 10}}>\n            <div className=\"jumbotron\">\n            <h1> \n            <b><center>Software Engineering Evidence Repository - SEER{\" \"}</center></b>\n           </h1>      \n           </div>\n            <h3><b>Register to SEER{\" \"}</b></h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>First Name: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.firstName}\n                                placeholder=\"John\"\n                                onChange={this.onChangefirstName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Last Name: </label>\n                        <input \n                                type=\"text\"  \n                                className=\"form-control\"\n                                value={this.state.lastName}\n                                placeholder=\"Doe\"\n                                onChange={this.onChangelastName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.email}\n                                placeholder=\"john@example.com\"\n                                onChange={this.onChangeemail}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                value={this.state.password}\n                                placeholder=\"********\"\n                                onChange={this.onChangepassword}\n                                />\n                    </div>\n                    {/* <div className=\"form-row\">\n                                <div className=\"form-group col-md-6\">\n                                    <label>Role :</label>\n                                    <select className=\"form-control\" name=\"role\" onChange={this.onChangeuserType}>\n                                        <option selected>Select Role</option>\n                                        <option value=\"1\">Searcher</option>\n                                        <option value=\"2\">Submitter</option>\n                                        <option value=\"3\">Moderator</option>\n                                        <option value=\"4\">Analyst</option>\n                                        <option value=\"4\">Admin</option>\n                                    </select>\n                                </div>\n                            </div> */}\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nexport default Create;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n    constructor(props) {\n        super();\n\n        this.onChangeemail = this.onChangeemail.bind(this);\n        this.onChangepassword = this.onChangepassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    onChangeemail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangepassword(e) {\n      this.setState({\n          password: e.target.value\n      });\n  }\n\n\n  onSubmit(e) {\n        e.preventDefault();\n\n        const loggeduser = {\n          email: this.state.email,\n          password: this.state.password\n      };\n\n        axios.post('http://localhost:5000/auth/signin', loggeduser)\n        .then(res => {\n            if (res.status === 200) {\n              localStorage.setItem('jwtToken', res.data.token);\n              this.props.history.push(\"/userpage\");\n            } else {\n              const error = new Error(res.error);\n              throw error;\n            }\n          })\n          .catch(err => {\n            alert(\"Error logging in please try again\");\n          });\n\n        this.setState({\n            email: '',\n            password: ''\n        })\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 10}}>\n                <div className=\"jumbotron\">\n              <h2>\n              <b><center>Software Engineering Evidence Repository - SEER{\" \"}</center></b>\n              </h2>\n             </div>\n                <h3>Login to SEER</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.email}\n                                onChange={this.onChangeemail}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                value={this.state.password}\n                                onChange={this.onChangepassword}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Loginscreen extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n             <div className=\"jumbotron\">\n              <h2>\n              <b><center>Software Engineering Evidence Repository - SEER{\" \"}</center></b>\n              </h2>\n             </div>\n            <h4>\n            <p><center>Congratulations!! You are now registered to SEER. </center></p>\n            <p><center>Please use your email address for login.</center></p>\n            </h4>\n            <Link to=\"/login\" className=\"link\">\n            <h5><center><input type=\"submit\" value=\"Login to SEER\" className=\"btn btn-primary\" /></center></h5>\n            </Link>\n          </div>\n          \n        )\n    }\n}\n\nexport default Loginscreen;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class SubmitEvidence extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangetypeOfPaper = this.onChangetypeOfPaper.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeAuthor = this.onChangeAuthor.bind(this);\n        this.onChangeSource = this.onChangeSource.bind(this);\n        this.onChangeYear = this.onChangeYear.bind(this);\n        this.onChangeDOI = this.onChangeDOI.bind(this);\n        this.onChangeSubmitter = this.onChangeSubmitter.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            typeOfPaper: '',\n            title: '',\n            author: '',\n            source: '',\n            yearOfPublication: 0,\n            doiLink: '',\n            dateOfSubmission: new Date()\n\n        }\n    }\n\n\n    onChangetypeOfPaper(e) {\n        this.setState({\n            typeOfPaper: e.target.value\n        })\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    onChangeAuthor(e) {\n        this.setState({\n            author: e.target.value\n        })\n    }\n\n    onChangeSource(e) {\n        this.setState({\n            source: e.target.value\n        })\n    }\n\n    onChangeYear(e) {\n        this.setState({\n            yearOfPublication: e.target.value\n        })\n    }\n\n    onChangeDOI(e) {\n        this.setState({\n            doiLink: e.target.value\n        })\n    }\n\n\n\n    onChangeSubmitter(e) {\n        this.setState({\n            submitter: e.target.value\n        })\n    }\n\n    onChangeDate(date) {\n        this.setState({\n            dateOfSubmission: date\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const evidence = {\n            typeOfPaper: this.state.typeOfPaper,\n            title: this.state.title,\n            author: this.state.author,\n            source: this.state.source,\n            yearOfPublication: this.state.yearOfPublication,\n            doiLink: this.state.doiLink,\n            status: \"Submitted\",\n            dateOfSubmission: this.state.dateOfSubmission\n\n        }\n\n        console.log(evidence);\n\n        axios.post('http://localhost:5000/evidence/add', evidence)\n\n        window.location = '/success';\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n            <div className=\"jumbotron\">\n              <h2>\n              <b><center>Software Engineering Evidence Repository - SEER{\" \"}</center></b>\n              </h2>\n             </div>\n                <h3>Create New Evidence </h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Type Of Evidence: </label>\n                        <select className=\"form-control\" name=\"typeOfPaper\" onChange={this.onChangetypeOfPaper}>\n                            <option selected>Select Evidence Type</option>\n                            <option value=\"Book\">Book</option>\n                            <option value=\"Journal\">Journal</option>\n                            <option value=\"Website\">Website</option>\n\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Title: </label>\n                        <input type=\"text\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.title}\n                            onChange={this.onChangeTitle}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Author: </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.author}\n                            onChange={this.onChangeAuthor}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Source: </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.source}\n                            onChange={this.onChangeSource}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>DOI : </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.doiLink}\n                            onChange={this.onChangeDOI}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Year: </label>\n                        <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            value={this.state.yearOfPublication}\n                            onChange={this.onChangeYear}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Date: </label>\n                        <div>\n                            <DatePicker\n                                selected={this.state.dateOfSubmission}\n                                onChange={this.onChangeDate}\n                            />\n                        </div>\n                    </div>\n\n\n\n\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Evidence\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Loginscreen extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n             <div className=\"jumbotron\">\n              <h2>\n              <b><center>Software Engineering Evidence Repository - SEER{\" \"}</center></b>\n              </h2>\n             </div>\n            <h4>\n            <p>Welcome to SEER. </p>\n            <p>Suggest an article related to SE method.</p>\n            </h4>\n            <Link to=\"/SubmitEvidence\" className=\"link\">\n            <input type=\"submit\" value=\"Submit Article\" className=\"btn btn-primary\" />\n            </Link>\n          </div>\n          \n        )\n    }\n}\n\nexport default Loginscreen;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default class Success extends Component {\n\n    render() {\n        return (\n\n            <div className=\"container\">\n                <div className=\"jumbotron\">\n              <h2>\n              <b><center>Software Engineering Evidence Repository - SEER{\" \"}</center></b>\n              </h2>\n             </div>\n                <br />\n\n                <h3><center>You have successfully submitted the paper!</center></h3>\n                <Link to=\"/userpage\" className=\"link\">\n                <center><input type=\"submit\" value=\"Go to the Dashboard\" className=\"btn btn-primary\" /></center>\n                </Link>\n            </div>\n\n\n        );\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nconst Methods = [\n    {\n        label: \"TDD\",\n        value: \"TDD\",\n    },\n  ];\n\n  const Claims = [\n    {\n        label: \"Improve Code Quality\",\n        value: \"Improve Code Quality\",\n    },\n    {\n      label: \"Improve Software Design Quality\",\n      value: \"Improve Software Design Quality\",\n    },\n    {\n        label: \"Primary means of developing software\",\n        value: \"Primary means of developing software\",\n      },\n  ];\n\nexport default class searchEvidence extends Component {\n    constructor(props) {\n        super(props)\n\n        this.displayEvidence= this.displayEvidence.bind(this);\n        this.handleChangeSearch= this.handleChangeSearch.bind(this);\n        this.handleChangeSearch1= this.handleChangeSearch1.bind(this);\n        this.onSubmitSearch= this.onSubmitSearch.bind(this);\n    //  this.fetchFromYear= this.fetchFromYear.bind(this);\n    //  this.fetchToYear = this.fetchToYear.bind(this);\n\n        this.state = {\n            searchseMethod : [],\n            searchclaims : [],\n            selected: '',\n            evidence: [],\n            // fromYear: '',\n            // toYear: ''\n        }\n    };\n    componentDidMount() {\n        this.defaultDisplay()\n    }\n\n    defaultDisplay()  {\n        axios({\n            method: \"get\",\n            url: \"/evidence/evidences/all\"\n        })\n        .then(response => {\n            this.setState ({\n                evidence : response.data\n            })\n        })\n        .catch(err => console.log(err))\n        \n    }\n\n    displayEvidence = (evidence) => {\n\n        if(!evidence.length) {\n            return null;\n        }\n\n      //  console.log(evidence[0])\n        return ( evidence.map((evidence, index) => (\n            <tr key={index}>\n                <td>{evidence.seMethod}</td>\n                <td>{evidence.claims}</td>\n                <td>{evidence.degreeofevidence}</td>\n                <td>{evidence.typeOfPaper}</td>\n                <td>{evidence.source}</td>\n                <td>{evidence.title}</td>\n                <td>{evidence.author}</td>\n                <td>{evidence.yearOfPublication}</td>\n                <td>{evidence.doiLink}</td>\n                {/* <td>{evidence.outcome}</td>\n                <td>{evidence.rating}</td> */}\n            </tr>\n        )));\n    }\n\n    handleChangeSearch(e){\n        console.log(e)\n        this.setState({searchseMethod:e.label})\n        \n       }\n      \n       handleChangeSearch1(e){\n        console.log(e)\n        this.setState({searchclaims:e.label})\n        \n       }\n\n    // fetchFromYear(e){\n    //     this.setState ({\n    //         fromYear: e.target.value\n    //     })\n    // //  console.log(this.state.fromYear)\n    // }\n\n    // fetchToYear(e){\n    //     this.setState ({\n    //         toYear: e.target.value\n    //     })\n    // // console.log(this.state.toYear)\n    // }\n\n    onSubmitSearch(e) {\n        e.preventDefault();\n        \n        const searchseMethod= this.state.searchseMethod;\n        const searchclaims= this.state.searchclaims;\n        axios.get(\"/evidence/?search=\"+searchseMethod+\"&search1=\"+searchclaims)\n     // axios.get(\"http://localhost:5000/evidence/?search=\"+seMethod)\n        .then(response => {\n                this.setState ({\n                    evidence : response.data\n                })\n                console.log(response.data)\n            })\n            .catch(err => console.log(err))\n                }\n\n        // const fromYear= this.state.fromYear;\n        // const toYear= this.state.toYear;\n       \n    //    console.log(fromYear, toYear)\n\n    render()\n     {\n        return (\n            <div className=\"container\">\n                 <div className=\"jumbotron\">\n              <h2>\n              <b>Software Engineering Evidence Repository - SEER{\" \"}</b>\n              </h2>\n             </div>\n                <h5> Select SE Method</h5>\n                <div>\n                <Select options={Methods} onChange={this.handleChangeSearch}/>\n                </div>\n                <br/>\n                <h5> Select Claim for selected SE Method</h5>\n                <div>\n                <Select options={Claims} onChange={this.handleChangeSearch1}/>\n                </div>\n                <br/>\n                {/* <div className=\"year-filter\"> \n                    <label for=\"fromYear\">From</label>&nbsp;\n                    <input\n                    type=\"number\" \n                    id=\"fromYear\" \n                    placeholder=\"1900\"\n                    value={this.state.fromYear}\n                    onChange={this.fetchFromYear}\n                    /> &nbsp;\n                    <label for=\"toYear\">To</label>&nbsp;\n                    <input \n                     type=\"number\"\n                     id=\"toYear\" \n                     placeholder=\"2020\"\n                     value={this.state.toYear}\n                     onChange={this.fetchToYear}\n                     />\n                </div> */}\n                <br/>\n                <button type=\"button\" \n                className=\"btn btn-primary btn-lg\" \n              //  value={this.state.searchString}\n                onClick={this.onSubmitSearch}\n                >Search</button>\n                <br/>\n                <br/>\n                <table className=\"table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>SE Method</th>\n                            <th>Claims</th>\n                            <th>Degree of Evidence</th>\n                            <th>Type</th>\n                            <th>Source</th>\n                            <th>Title</th>\n                            <th>Author</th>\n                            <th>Published Year</th>\n                            <th>DOI</th>\n                            {/* <th>Outcome</th>\n                            <th>Rating</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.displayEvidence(this.state.evidence)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n             <div className=\"jumbotron\">\n              <h2>\n              <b><center>Software Engineering Evidence Repository - SEER{\" \"}</center></b>\n              </h2>\n             </div>\n            <p className=\"flow-text grey-text text-darken-1\">\n              <b>Easy and flexible access to curated credible evidence extracted by our experts from peer-reviewed academic research (journals and conference proceedings).</b>\n            </p>\n            <div className = \"leftFloat\">\n              <p>\n             <b>Search SEER to get a list of empirical\n             research articles related to software engineering, with a summary of the study.</b>\n             </p>\n          </div>\n          <Link to=\"/search\" className=\"link\">\n            <h5><input type=\"submit\" value=\"Search SEER\" className=\"btn btn-primary\" /></h5>\n            </Link>\n            <div className = \"leftFloat\">\n              <p>\n             <b>You are also welcome to suggest an article you think could help others.\n             Kindly register on our website for submitting articles.</b>\n             </p>\n             <Link to=\"/register\" className=\"link\">\n            <h5><input type=\"submit\" value=\"Register & Submit Articles\" className=\"btn btn-primary\" /></h5>\n            </Link>\n            <Link to=\"/login\" className=\"link\">\n            <h5><input type=\"submit\" value=\"Already Registered? Click here to login into your account\" className=\"btn btn-primary\" /></h5>\n            </Link>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; //essential package for linking together components\n\n//class defined specifically for having a navigation bar linked to appropriate components\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">SEER</Link>\n        <div className=\"collpase navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n        <li className=\"navbar-item\">\n          <Link to=\"/login\" className=\"nav-link\">Login to SEER</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/search\" className=\"nav-link\">Search SEER</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/SubmitEvidence\" className=\"nav-link\">Submit Articles</Link>\n          </li>\n\n        </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Register from \"./././components/auth/Register\";\nimport Login from \"./././components/auth/Login\";\nimport Loginscreen from \"./././components/auth/Loginscreen\";\nimport SubmitEvidence from \"./././components/auth/SubmitEvidence\";\nimport userpage from \"./././components/auth/userpage\";\nimport Success from \"./././components/auth/Success\";\nimport Search from \"./components/Search/searchEvidence\";\nimport Landing from \"./components/home/landing\";\nimport Navbar from \"./components/home/navbar\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navbar />\n      <div className=\"container\">\n      <Route path=\"/\" exact component={Landing} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/register\" exact component={Register} />\n      <Route path=\"/loginscreen\" exact component={Loginscreen} />\n      <Route path=\"/userpage\" exact component={userpage} />\n      <Route path=\"/SubmitEvidence\" exact component={SubmitEvidence} />\n      <Route path=\"/Success\" exact component={Success} />\n      <Route path=\"/search\" exact component={Search} />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}